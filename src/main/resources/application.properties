# Inventory demo configuration
inventorydemo.skus.number=10
inventorydemo.generated.orders.interval.seconds=5
inventorydemo.generated.orders.orderentries.upperbound.number=5
inventorydemo.generated.orders.product.quantity.upperbound.number=4
inventorydemo.generated.shipments.fixed_shipping_delay.seconds=10
inventorydemo.generated.shipments.variable_shipping_delay.upperbound.seconds=10
inventorydemo.generated.stock-levels.interval.seconds=5
inventorydemo.generated.stock-levels.fixed_level.number=10

# Kafka configuration
kafka.bootstrap.servers=${BOOTSTRAP_SERVERS}

kafka.security.protocol=SASL_SSL
kafka.sasl.mechanism=OAUTHBEARER
kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.client.id="${CLIENT_ID}" \
  oauth.client.secret="${CLIENT_SECRET}" \
  oauth.token.endpoint.uri="${TOKEN_ENDPOINT_URI}" ;
kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

# Needed for io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler to work in native mode
quarkus.ssl.native=true

# smallrye channels
mp.messaging.outgoing.orders-out.connector=smallrye-kafka
mp.messaging.outgoing.orders-out.topic=orders
mp.messaging.outgoing.orders-out.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

mp.messaging.incoming.orders.connector=smallrye-kafka
mp.messaging.incoming.orders.topic=orders
mp.messaging.incoming.orders.value.deserializer=org.acme.serde.OrderDeserializer

mp.messaging.outgoing.shipments-out.connector=smallrye-kafka
mp.messaging.outgoing.shipments-out.topic=shipments
mp.messaging.outgoing.shipments-out.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

mp.messaging.incoming.shipments.connector=smallrye-kafka
mp.messaging.incoming.shipments.topic=shipments
mp.messaging.incoming.shipments.value.deserializer=org.acme.serde.OrderDeserializer

mp.messaging.incoming.reserved-stock.connector=smallrye-kafka
mp.messaging.incoming.reserved-stock.topic=reserved-stock
mp.messaging.incoming.reserved-stock.key.deserializer=org.acme.serde.ProductDeserializer
mp.messaging.incoming.reserved-stock.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer

mp.messaging.incoming.stock-levels.connector=smallrye-kafka
mp.messaging.incoming.stock-levels.topic=stock-levels
mp.messaging.incoming.stock-levels.key.deserializer=org.acme.serde.ProductDeserializer
mp.messaging.incoming.stock-levels.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer

mp.messaging.outgoing.stock-levels-out.connector=smallrye-kafka
mp.messaging.outgoing.stock-levels-out.topic=stock-levels
mp.messaging.outgoing.stock-levels-out.key.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer
mp.messaging.outgoing.stock-levels-out.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer

mp.messaging.incoming.available-stock.connector=smallrye-kafka
mp.messaging.incoming.available-stock.topic=available-stock
mp.messaging.incoming.available-stock.key.deserializer=org.acme.serde.ProductDeserializer
mp.messaging.incoming.available-stock.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer